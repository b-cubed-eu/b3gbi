% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calc_map_methods.R, R/generic_functions.R
\name{calc_map.obs_richness}
\alias{calc_map.obs_richness}
\alias{calc_map.total_occ}
\alias{calc_map.newness}
\alias{calc_map.occ_density}
\alias{calc_map.williams_evenness}
\alias{calc_map.pielou_evenness}
\alias{calc_map.ab_rarity}
\alias{calc_map.area_rarity}
\alias{calc_map.spec_occ}
\alias{calc_map.spec_range}
\alias{calc_map.tax_distinct}
\alias{calc_map}
\title{Calculate Biodiversity Indicators Over Space}
\usage{
\method{calc_map}{obs_richness}(x, ...)

\method{calc_map}{total_occ}(x, ...)

\method{calc_map}{newness}(x, newness_min_year = NULL, ...)

\method{calc_map}{occ_density}(x, ...)

\method{calc_map}{williams_evenness}(x, ...)

\method{calc_map}{pielou_evenness}(x, ...)

\method{calc_map}{ab_rarity}(x, ...)

\method{calc_map}{area_rarity}(x, ...)

\method{calc_map}{spec_occ}(x, ...)

\method{calc_map}{spec_range}(x, ...)

\method{calc_map}{tax_distinct}(x, ...)

calc_map(x, ...)
}
\arguments{
\item{x}{A data cube object ('processed_cube').}

\item{...}{Additional arguments passed to specific indicator calculation
functions.}

\item{newness_min_year}{If set, only shows values above this (e.g. 1970).
Values below the minimum will be replaced with NA. This can be useful e.g.
if you have outlier cells where the data is very old causing the legend
gradient to stretch in a way that makes other cell values difficult to
discern.}
}
\value{
An S3 object of the class 'indicator_map' containing the calculated
indicator values and metadata.
}
\description{
This function provides a flexible framework for calculating
various biodiversity indicators on a spatial grid or as a time series. It
prepares the data, creates a grid, calculates indicators, and formats the
output into an appropriate S3 object ('indicator_map'). Specific
implementations for different indicator types are provided using the
appropriate wrappers.
}
\examples{
observed_richness_map <- obs_richness_map(example_cube_1,
  level = "country",
  region = "Denmark"
)
plot(observed_richness_map)

}
