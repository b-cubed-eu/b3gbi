% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/indicator_wrappers.R
\name{pielou_evenness_map}
\alias{pielou_evenness_map}
\alias{pielou_evenness_ts}
\alias{williams_evenness_map}
\alias{williams_evenness_ts}
\title{Calculate Evenness Over Time or Space}
\usage{
pielou_evenness_map(data, ...)

pielou_evenness_ts(data, ...)

williams_evenness_map(data, ...)

williams_evenness_ts(data, ...)
}
\arguments{
\item{data}{A data cube object (class 'processed_cube').}

\item{...}{
  Arguments passed on to \code{\link[=compute_indicator_workflow]{compute_indicator_workflow}}
  \describe{
    \item{\code{ci_type}}{(Optional) Type of bootstrap confidence intervals to
calculate. (Default: "norm"). Select "none" to avoid calculating bootstrap
CIs.}
    \item{\code{cell_size}}{(Optional) Length of grid cell sides, in km or degrees.
If NULL, this will be automatically determined according to the geographical
level selected. This is 100 km or 1 degree for 'continent' or 'world', 10 km
or (for a degree-based CRS) the native resolution of the cube for 'country',
'sovereignty' or 'geounit'. If level is set to 'cube', cell size will be the
native resolution of the cube for a degree-based CRS, or for a km-based CRS,
the cell size will be determined by the area of the cube: 100 km for cubes
larger than 1 million sq km, 10 km for cubes between 10 thousand and 1
million sq km, 1 km for cubes between 100 and 10 thousand sq km, and 0.1 km
for cubes smaller than 100 sq km. (Default: NULL)}
    \item{\code{level}}{(Optional) Spatial level: 'cube', 'continent', 'country',
'world', 'sovereignty', or 'geounit'. (Default: 'cube')}
    \item{\code{region}}{(Optional) The region of interest (e.g., "Europe"). This
parameter is ignored if level is set to 'cube' or 'world'. (Default: NULL)}
    \item{\code{ne_type}}{(Optional) The type of Natural Earth data to download:
'countries', 'map_units', 'sovereignty', or 'tiny_countries'. This parameter
is ignored if level is set to 'cube' or 'world'. (Default: "countries")}
    \item{\code{ne_scale}}{(Optional) The scale of Natural Earth data to download:
'small' - 110m, 'medium' - 50m, or 'large' - 10m. (Default: "medium")}
    \item{\code{output_crs}}{(Optional) The CRS you want for your calculated indicator.
(Leave blank to let the function choose a default based on grid reference
system.)}
    \item{\code{first_year}}{(Optional) Exclude data before this year. (Uses all data in
the cube by default.)}
    \item{\code{last_year}}{(Optional) Exclude data after this year. (Uses all data in
the cube by default.)}
    \item{\code{spherical_geometry}}{(Optional) If set to FALSE, will temporarily
disable spherical geometry while the function runs. Should only be used to
solve specific issues. (Default is TRUE).}
    \item{\code{make_valid}}{(Optional) Calls st_make_valid() from the sf package
after creating the grid. Increases processing time but may help if you are
getting polygon errors. (Default is FALSE).}
    \item{\code{num_bootstrap}}{(Optional) Set the number of bootstraps to calculate for
generating confidence intervals. (Default: 100)}
    \item{\code{shapefile_path}}{(optional) Path of an external shapefile to merge into
the workflow. For example, if you want to calculate your indicator
particular features such as protected areas or wetlands.}
    \item{\code{shapefile_crs}}{(Optional) CRS of a .wkt shapefile. If your shapefile
is .wkt and you do NOT use this parameter, the CRS will be assumed to be
EPSG:4326 and the coordinates will be read in as lat/long. If your shape is
NOT a .wkt the CRS will be determined automatically.}
    \item{\code{invert}}{(optional) Calculate an indicator over the inverse of the
shapefile (e.g. if you have a protected areas shapefile this would calculate
an indicator over all non protected areas within your cube). Default is
FALSE.}
    \item{\code{include_land}}{(Optional) Include occurrences which fall within the
land area. Default is TRUE. *Note that this purely a geographic filter, and
does not filter based on whether the occurrence is actually terrestrial.
Grid cells which fall partially on land and partially on ocean will be
included even if include_land is FALSE. To exclude terrestrial and/or
freshwater taxa, you must manually filter your data cube before calculating
your indicator.}
    \item{\code{include_ocean}}{(Optional) Include occurrences which fall outside the
land area. Default is TRUE. Set as "buffered_coast" to include a set buffer
size around the land area rather than the entire ocean area. *Note that this
is purely a geographic filter, and does not filter based on whether the
occurrence is actually marine. Grid cells which fall partially on land and
partially on ocean will be included even if include_ocean is FALSE. To
exclude marine taxa, you must manually filter your data cube before
calculating your indicator.}
    \item{\code{buffer_dist_km}}{(Optional) The distance to buffer around the land if
include_ocean is set to "buffered_coast". Default is 50 km.}
    \item{\code{force_grid}}{(Optional) Forces the calculation of a grid even if this
would not normally be part of the pipeline, e.g. for time series. This
setting is required for the calculation of rarity, and is turned on by the
ab_rarity_ts and area_rarity_ts wrappers. (Default: FALSE)}
  }}
}
\value{
An S3 object with the classes 'indicator_map' or 'indicator_ts' and
'pielou_evenness' or 'williams_evenness' containing the calculated indicator
values and metadata.
}
\description{
Calculate evenness over a gridded map or as a time series (see
'Details' for more information).
}
\details{
\subsection{Evenness}{

Species evenness is a commonly used indicator that measures how
uniformly individuals are distributed across species in a region
or over time. It provides a complement to richness by taking
relative abundance into account. Although GBIF provides
information about abundances as individual counts, the majority
of entries lack this information. Hence, evenness can only be
calculated using the proportions of observations rather than
proportions of individuals. Strictly speaking, the evenness
measures therefore indicate how uniformly species are
represented in the respective data set rather than the true
evenness of the ecological community.
}

\subsection{Pielou's evenness}{

Pielou's evenness (1966) is a well-known and commonly
used evenness measure. It is calculated as:

\deqn{
 E = \frac{-\sum_{i=1}^{S} p_i \ln(p_i)}{\ln(S)}
}{
 E = -Sum from i=1 to S of pi * ln(pi) / ln(S)
}
where S is the number of species and pi is the proportion of occurrences
represented by species i.
}

\subsection{Williams' evenness}{

An analysis of evenness properties by Kvålseth (2015) showed
that an evenness index introduced by Williams in 1977 in an
unpublished manuscript has two important properties which
Pielou's does not. The properties in question are complex
mathematical properties known as the Schur-Concavity and
value validity, but we attempt to describe them here more
simply. If a measure of evenness is Schur-concave, it means
that when the distribution of individuals becomes more evenly
spread across species, the measure of evenness will stay the
same or increase, but never decrease. Value validity means
that an evenness index should provide sensible and meaningful
values across its range for any given distribution of species
abundances. Kvålseth referred to this evenness measure as E9
but we refer to it as Williams' evenness.

Williams' evenness is calculated as:

\deqn{
  1 - \sqrt{\frac{S\sum_{i=1}^{S} p_i^2 - 1}{S - 1}}
}{
  1 - sqrt((S * Sum from i=1 to S of pi^2 - 1) / (S - 1))
}

where S is the number of species and pi is the proportion of occurrences
represented by species i.
}
}
\section{Functions}{
\itemize{
\item \code{pielou_evenness_map()}: 

\item \code{pielou_evenness_ts()}: 

\item \code{williams_evenness_map()}: 

\item \code{williams_evenness_ts()}: 

}}
\examples{
\dontrun{
pe_map <- pielou_evenness_map(example_cube_1, level = "country",
                              region = "Denmark")
plot(pe_map)
}
\dontrun{
pe_ts <- pielou_evenness_ts(example_cube_1, first_year = 1985)
plot(pe_ts)
}
\dontrun{
we_map <- williams_evenness_map(example_cube_1, level = "country",
                                region = "Denmark")
plot(we_map)
}
\dontrun{
we_ts <- williams_evenness_ts(example_cube_1, first_year = 1985)
plot(we_ts)
}
}
\references{
Pielou, E. C. (1966). The measurement of diversity in
different types of biological collections. \emph{Journal of theoretical biology},
\emph{13}, 131-144.

Kvålseth, T. O. (2015). Evenness indices once again: critical analysis
of properties. \emph{SpringerPlus}, \emph{4}, 1-12.
}
\seealso{
compute_indicator_workflow
}
